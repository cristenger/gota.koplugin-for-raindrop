local InfoMessage = require("ui/widget/infomessage")
local UIManager   = require("ui/uimanager")
local Menu        = require("ui/widget/menu")
local _           = require("gettext")

local UI = {}

--------------------------------------------------
-- inicialización
--------------------------------------------------
function UI:init(parent)
    self.parent   = parent          -- objeto Gota
    self.progress = nil             -- widget de progreso
    self.menu     = Menu            -- alias para usar desde init.lua
end

--------------------------------------------------
-- utilidades de notificación
--------------------------------------------------
function UI:showProgress(text)
    self:hideProgress()
    self.progress = InfoMessage:new{ text = text or _("Cargando…"), timeout = 0 }
    UIManager:show(self.progress)
    UIManager:forceRePaint()
end

function UI:hideProgress()
    if self.progress then UIManager:close(self.progress) end
    self.progress = nil
end

function UI:notify(text, timeout)
    UIManager:show(InfoMessage:new{ text = text, timeout = timeout or 3 })
end

--------------------------------------------------
-- menú principal de KOReader
--------------------------------------------------
function UI:populateMainMenu(menu_items)
    local sep = Menu.separator
    menu_items.gota = {
        text          = _("Gota (Raindrop.io)"),
        sorting_hint  = "more_tools",
        sub_item_table = {
            {
                text     = _("Colecciones"),
                callback = function() self.parent.collections:show() end,
            },
            {
                text     = _("Buscar"),
                callback = function() self.parent.search:showDialog() end,
            },
            sep,
            {
                text     = _("Debug"),
                callback = function() self.parent.debug:show() end,
            },
            sep,
            {
                text     = _("Configurar token"),
                callback = function() self.parent.auth:showDialog() end,
            },
        },
    }
end

-- registra la entrada de Gota en el menú principal
function UI:addToMainMenu(widget)
    -- widget = self.parent normalmente
    self.menu:registerToMainMenu(widget, function(items)
        self:populateMainMenu(items)
    end)
end

return UI